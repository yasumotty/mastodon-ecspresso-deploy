name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: yasumotty/mastodon
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          path: mastodon
          ref: feature/ecs_deploy

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push app image to Amazon ECR
        id: build
        env:
          DOCKER_BUILDKIT: 1
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: mastodon
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build \
            --cache-from=$ECR_REGISTRY/$ECR_REPOSITORY:latest --build-arg BUILDKIT_INLINE_CACHE=1 \
            -t mastodon ./mastodon/
          docker tag mastodon:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - uses: kayac/ecspresso@v1
        with:
          version: v1.5.4

      - name: regist task definition
        run: |
          ecspresso register --config ecspresso/rails.yaml

      - name: db:migrate
        run: |
          ecspresso run --config ecspresso/rails.yaml --overrides '{"containerOverrides": [{"name":"web", "command": ["rails","db:migrate"]}]}' --latest-task-definition

      - name: deploy rails
        run: |
          ecspresso deploy --config ecspresso/rails.yaml --latest-task-definition

      - name: deploy sidekiq
        run: |
          ecspresso deploy --config ecspresso/sidekiq.yaml --latest-task-definition